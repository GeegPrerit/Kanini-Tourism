// <auto-generated />
using System;
using Kanini_Tourism.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kanini_Tourism.Migrations
{
    [DbContext(typeof(TourismDbContext))]
    partial class TourismDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kanini_Tourism.Models.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"));

                    b.Property<byte[]>("AdminImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdministratorId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.BookingDetail", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TravelerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TripId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.ImageGallery", b =>
                {
                    b.Property<int?>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ImageId"));

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("AdministratorId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.TravelAgent", b =>
                {
                    b.Property<int?>("TravelAgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TravelAgentId"));

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravelAgentId");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.TravelDetail", b =>
                {
                    b.Property<int?>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PlanId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itenary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Persons")
                        .HasColumnType("int");

                    b.Property<string>("PlanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PlanImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PlanPrice")
                        .HasColumnType("int");

                    b.Property<string>("PlanTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelAgentsTravelAgentId")
                        .HasColumnType("int");

                    b.HasKey("PlanId");

                    b.HasIndex("TravelAgentsTravelAgentId");

                    b.ToTable("TravelDetails");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.Traveler", b =>
                {
                    b.Property<int>("TravelerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelerId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelAgentsTravelAgentId")
                        .HasColumnType("int");

                    b.Property<string>("TravelerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TravellerImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravelerId");

                    b.HasIndex("TravelAgentsTravelAgentId");

                    b.ToTable("Travelers");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.BookingDetail", b =>
                {
                    b.HasOne("Kanini_Tourism.Models.TravelDetail", "TravelDetail")
                        .WithMany()
                        .HasForeignKey("TripId");

                    b.HasOne("Kanini_Tourism.Models.Traveler", "Travelers")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");

                    b.Navigation("TravelDetail");

                    b.Navigation("Travelers");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.ImageGallery", b =>
                {
                    b.HasOne("Kanini_Tourism.Models.Administrator", null)
                        .WithMany("ImageGallery")
                        .HasForeignKey("AdministratorId");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.TravelDetail", b =>
                {
                    b.HasOne("Kanini_Tourism.Models.TravelAgent", "TravelAgents")
                        .WithMany()
                        .HasForeignKey("TravelAgentsTravelAgentId");

                    b.Navigation("TravelAgents");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.Traveler", b =>
                {
                    b.HasOne("Kanini_Tourism.Models.TravelAgent", "TravelAgents")
                        .WithMany()
                        .HasForeignKey("TravelAgentsTravelAgentId");

                    b.Navigation("TravelAgents");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.Administrator", b =>
                {
                    b.Navigation("ImageGallery");
                });

            modelBuilder.Entity("Kanini_Tourism.Models.Traveler", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
